print("🐶 犬版MBTI診断を始めましょう！")
import streamlit as st

# 犬MBTI診断の質問
questions = [
    ("散歩中、知らない犬に会うと…", "すぐに近づいて挨拶する！", "ちょっと様子を見てから行動する"),
    ("来客があると…", "大興奮！尻尾を振って飛びつく！", "隅っこで様子を伺う"),
    ("ドッグランでは…", "すぐに他の犬と遊び始める", "飼い主の近くで安心したい"),
    ("おもちゃをもらったら…", "すぐに口にくわえて見せびらかす", "こっそりお気に入りの場所で遊ぶ"),
    ("新しい環境に行くと…", "すぐに探検して楽しむ！", "少し時間をかけて慣れる"),
    ("散歩コースは…", "いつもの道が安心！", "新しい道を探検したい！"),
    ("おやつをもらうとき…", "確実に手に入る方法を考える", "どうやったらもっともらえるか考える"),
    ("指示を覚えるのは…", "繰り返し練習すればバッチリ！", "なんとなく感覚で理解！"),
    ("おもちゃで遊ぶとき…", "いつものお気に入りが一番！", "新しい遊び方を見つけるのが好き！"),
    ("飼い主の気分を察するのは…", "具体的な行動で判断", "雰囲気やエネルギーで感じ取る"),
    ("「待て」と言われたら…", "ルールだからしっかり守る！", "飼い主の気分次第で判断する"),
    ("他の犬が困っていたら…", "どうやったら解決できるか考える", "すぐに寄り添って気持ちを共有する"),
    ("叱られたときの反応は…", "何がダメだったのか考える", "怒られて悲しいと感じる"),
    ("おもちゃの取り合いになったら…", "戦略を考えて取り返す", "相手の気持ちを考えて譲る"),
    ("飼い主が落ち込んでいたら…", "そっとそばにいてあげる", "一生懸命なぐさめようとする"),
    ("ごはんの時間が決まっていると…", "きっちり守らないと落ち着かない！", "もらえたらラッキー！自由がいい！"),
    ("おもちゃをしまう場所は…", "決まった場所にきちんと置く", "気分でいろんなところに置く"),
    ("散歩のルートは…", "いつもの道が安心！", "その日の気分で決めたい！"),
    ("しつけのトレーニングでは…", "ルールが決まっている方が得意", "臨機応変に学ぶのが好き"),
]

# MBTIタイプの説明
dog_mbti_types = {
    "ESFP": "自由奔放なエンターテイナー！遊ぶのが大好きで、どこへ行っても人気者。",
    "ISFP": "マイペースなアーティスト。穏やかで優しく、飼い主にそっと寄り添うタイプ。",
    "ENTP": "いたずら好きのイノベーター！新しい遊びを発明するのが得意な頭脳派。",
    "INTP": "好奇心旺盛な学者。静かに考えながら、知的な遊びを楽しむのが好き。",
    "ESTJ": "しっかり者のリーダー。ルールを守り、家族をしっかり支える頼れる存在。",
    "ISTJ": "忠実なガードマン。警戒心が強く、飼い主にとても忠実。",
    "ENFP": "エネルギッシュな冒険家！どこへ行ってもワクワクする天真爛漫タイプ。",
    "INFJ": "繊細で思慮深いカウンセラー。飼い主の心を察してそっと寄り添う癒しの存在。",
}

st.title("🐶 犬MBTI診断テスト 🐾")
st.write("20の質問に答えて、あなたの愛犬の性格を診断しよう！")

# 回答の集計
type_counts = {"E": 0, "I": 0, "S": 0, "N": 0, "T": 0, "F": 0, "J": 0, "P": 0}

responses = []
for i, (question, option_a, option_b) in enumerate(questions):
    response = st.radio(f"{i+1}. {question}", [option_a, option_b], key=f"q{i}")
    responses.append(response)
    
    # 回答に応じてMBTIスコアをカウント
    if response == option_a:
        type_counts["E" if i < 5 else "S" if i < 10 else "T" if i < 15 else "J"] += 1
    else:
        type_counts["I" if i < 5 else "N" if i < 10 else "F" if i < 15 else "P"] += 1

if st.button("診断結果を表示"):  
    # MBTIタイプの決定
    mbti_type = "".join([
        "E" if type_counts["E"] > type_counts["I"] else "I",
        "S" if type_counts["S"] > type_counts["N"] else "N",
        "T" if type_counts["T"] > type_counts["F"] else "F",
        "J" if type_counts["J"] > type_counts["P"] else "P"
    ])
    
    st.subheader(f"🐕 診断結果：{mbti_type}")
    st.write(dog_mbti_types.get(mbti_type, "ユニークな性格の持ち主です！"))
